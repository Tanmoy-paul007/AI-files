# **ঘন্টা ২: সংখ্যাগত কম্পিউটিংয়ের জন্য NumPy (৬০ মিনিট)**  

## **শেখার উদ্দেশ্য**  
# - গাণিতিক অপারেশনের জন্য NumPy অ্যারে ব্যবহারে দক্ষ হওয়া  
# - ভেক্টরাইজড অপারেশন বুঝা  
# - এআই-এর জন্য অপরিহার্য ম্যাট্রিক্স অপারেশন শেখা  

## **আলোচ্য বিষয়**  

### **১. NumPy ফান্ডামেন্টালস (৩০ মিনিট)**  

#### **NumPy ইম্পোর্ট ও অ্যারে তৈরি**  
# ```python
import numpy as np  # NumPy লাইব্রেরি ইম্পোর্ট করা

# 1D অ্যারে (ভেক্টর)
data = np.array([1, 2, 3, 4, 5])  

# 2D অ্যারে (ম্যাট্রিক্স)
matrix = np.array([[1, 2], [3, 4], [5, 6]])  
# ```

#### **অ্যারে অপারেশন (লুপের চেয়ে দ্রুত)**  
# ```python
squared = data ** 2  # প্রতিটি এলিমেন্টের বর্গ  
normalized = (data - np.mean(data)) / np.std(data)  # ডাটা নরমালাইজেশন  
# ```

#### **ম্যাট্রিক্স অপারেশন (নিউরাল নেটওয়ার্কের ভিত্তি)**  
# ```python
weights = np.array([[0.5, 0.2], [0.1, 0.8]])  # ওয়েট ম্যাট্রিক্স  
inputs = np.array([1.0, 2.0])  # ইনপুট ভেক্টর  
output = np.dot(weights, inputs)  # ম্যাট্রিক্স গুণন (ডট প্রোডাক্ট)  
# ```

### **২. এআই-এর জন্য গাণিতিক অপারেশন (২০ মিনিট)**  

#### **লিনিয়ার অ্যালজেব্রা অপারেশন**  
# - ম্যাট্রিক্স গুণন (`np.dot`), ট্রান্সপোজ (`matrix.T`), ইনভার্স (`np.linalg.inv`)  

#### **স্ট্যাটিস্টিক্যাল ফাংশন**  
# - গড় (`np.mean`), স্ট্যান্ডার্ড ডেভিয়েশন (`np.std`), ভ্যারিয়েন্স (`np.var`)  

#### **এআই সিমুলেশনের জন্য র‍্যান্ডম নাম্বার জেনারেশন**  
# ```python
random_data = np.random.rand(3, 2)  # 3x2 র‍্যান্ডম ম্যাট্রিক্স  
random_int = np.random.randint(1, 10, size=5)  # 1-10 পর্যন্ত 5টি র‍্যান্ডম সংখ্যা  
# ```

### **৩. হ্যান্ডস-অন এক্সারসাইজ (১০ মিনিট)**  
# **একটি সাধারণ লিনিয়ার ট্রান্সফরমেশন ও নরমালাইজেশন পাইপলাইন ইম্প্লিমেন্ট করুন।**  

#### **উদাহরণ সমাধান:**  
# ```python

import numpy as np 

data = np.array([10, 20, 30, 40, 50])

transfer = 2 * data + 1

normalijation = (transfer - np.mean(transfer) / np.std(transfer))

print("Original:", data )
print("Transformed:", transfer)
print("Normalized:", normalijation)